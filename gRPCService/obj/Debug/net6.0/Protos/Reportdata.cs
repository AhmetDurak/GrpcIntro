// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/reportdata.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace gRPCService {

  /// <summary>Holder for reflection information generated from Protos/reportdata.proto</summary>
  public static partial class ReportdataReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/reportdata.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ReportdataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChdQcm90b3MvcmVwb3J0ZGF0YS5wcm90byIICgZBY3Rpb24iGgoIUmVzcG9u",
            "c2USDgoGc3RhdHVzGAEgASgFIjMKDFRlc3REYXRhTGlzdBIjChByZXBlYXRl",
            "ZFRlc3REYXRhGAEgAygLMgkuVGVzdERhdGEiyAQKCFRlc3REYXRhEhMKC21l",
            "YXN1cmVtZW50GAEgASgJEiAKBnN0YXR1cxgCIAEoDjIQLlRlc3REYXRhLlN0",
            "YXR1cxIeCgVzdGFnZRgDIAEoDjIPLlRlc3REYXRhLlN0YWdlEhUKCHBhcmVu",
            "dElEGAQgASgJSACIAQESEAoIaXRlbVR5cGUYBSABKAkSEwoGc3RlcElEGAYg",
            "ASgJSAGIAQESEgoFc3RhcnQYByABKANIAogBARIRCgRzdG9wGAggASgDSAOI",
            "AQESEQoJZmllbGROYW1lGAkgASgJEhIKCmZpZWxkVmFsdWUYCiABKAISEQoJ",
            "dGltZXN0YW1wGAsgASgDEhgKC2Rlc2NyaXB0aW9uGAwgASgJSASIAQESFgoJ",
            "aGlzdG9yeUlEGA0gASgJSAWIAQESEwoGaXRlbUlEGA4gASgJSAaIAQESEgoD",
            "dGFnGA8gAygLMgUuVGFncyI7CgZTdGF0dXMSCAoEbm9uZRAAEggKBGZhaWwQ",
            "ARIICgRwYXNzEAISCAoEc2tpcBADEgkKBWVycm9yEAQiWgoFU3RhZ2USCQoF",
            "bm9uZV8QABINCglzY2hlZHVsZWQQARILCgdydW5uaW5nEAISDAoIZmluaXNo",
            "ZWQQAxILCgdwZW5kaW5nEAQSDwoLaW50ZXJydXB0ZWQQBUILCglfcGFyZW50",
            "SURCCQoHX3N0ZXBJREIICgZfc3RhcnRCBwoFX3N0b3BCDgoMX2Rlc2NyaXB0",
            "aW9uQgwKCl9oaXN0b3J5SURCCQoHX2l0ZW1JRCKHAQoEVGFncxIRCgN0YWcY",
            "ASABKA4yBC5UYWcSFQoIdmFsdWVJbnQYAiABKAVIAIgBARIVCgh2YWx1ZVN0",
            "chgDIAEoCUgBiAEBEhYKCXZhbHVlQm9vbBgEIAEoCEgCiAEBQgsKCV92YWx1",
            "ZUludEILCglfdmFsdWVTdHJCDAoKX3ZhbHVlQm9vbCIWCgNMb2cSDwoHbG9n",
            "RGF0YRgBIAEoCSrqAQoDVGFnEg0KCXBhcmVudElEXxAAEgsKB2l0ZW1JRF8Q",
            "ARINCglpdGVtVHlwZV8QAhIOCgpoaXN0b3J5SURfEAMSDAoIc2V2ZXJpdHkQ",
            "BBIICgRlcGljEAUSDAoIZnVsbE5hbWUQBhIICgRuYW1lEAcSEAoMZGVzY3Jp",
            "cHRpb25fEAgSCgoGc3RhcnRfEAkSCQoFc3RvcF8QChIKCgZzdGFnZV8QCxIL",
            "CgdzdGF0dXNfEAwSDAoIbGlua1R5cGUQDRIOCgphdHRhY2htZW50EA4SCQoF",
            "bGFiZWwQDxINCglwYXJhbWV0ZXIQEDK+AQoIUmVwb3J0ZXISJAoMU2VuZFRl",
            "c3REYXRhEgkuVGVzdERhdGEaCS5SZXNwb25zZRIpCg1TZW5kVGVzdERhdGFz",
            "Eg0uVGVzdERhdGFMaXN0GgkuUmVzcG9uc2USHwoJREJDb25uZWN0EgcuQWN0",
            "aW9uGgkuUmVzcG9uc2USIgoMREJEaXNjb25uZWN0EgcuQWN0aW9uGgkuUmVz",
            "cG9uc2USHAoLR2V0R3JwY0xvZ3MSBy5BY3Rpb24aBC5Mb2dCDqoCC2dSUENT",
            "ZXJ2aWNlYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::gRPCService.Tag), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::gRPCService.Action), global::gRPCService.Action.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::gRPCService.Response), global::gRPCService.Response.Parser, new[]{ "Status" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::gRPCService.TestDataList), global::gRPCService.TestDataList.Parser, new[]{ "RepeatedTestData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::gRPCService.TestData), global::gRPCService.TestData.Parser, new[]{ "Measurement", "Status", "Stage", "ParentID", "ItemType", "StepID", "Start", "Stop", "FieldName", "FieldValue", "Timestamp", "Description", "HistoryID", "ItemID", "Tag" }, new[]{ "ParentID", "StepID", "Start", "Stop", "Description", "HistoryID", "ItemID" }, new[]{ typeof(global::gRPCService.TestData.Types.Status), typeof(global::gRPCService.TestData.Types.Stage) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::gRPCService.Tags), global::gRPCService.Tags.Parser, new[]{ "Tag", "ValueInt", "ValueStr", "ValueBool" }, new[]{ "ValueInt", "ValueStr", "ValueBool" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::gRPCService.Log), global::gRPCService.Log.Parser, new[]{ "LogData" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum Tag {
    [pbr::OriginalName("parentID_")] ParentId = 0,
    [pbr::OriginalName("itemID_")] ItemId = 1,
    [pbr::OriginalName("itemType_")] ItemType = 2,
    [pbr::OriginalName("historyID_")] HistoryId = 3,
    [pbr::OriginalName("severity")] Severity = 4,
    [pbr::OriginalName("epic")] Epic = 5,
    [pbr::OriginalName("fullName")] FullName = 6,
    [pbr::OriginalName("name")] Name = 7,
    [pbr::OriginalName("description_")] Description = 8,
    [pbr::OriginalName("start_")] Start = 9,
    [pbr::OriginalName("stop_")] Stop = 10,
    [pbr::OriginalName("stage_")] Stage = 11,
    [pbr::OriginalName("status_")] Status = 12,
    [pbr::OriginalName("linkType")] LinkType = 13,
    [pbr::OriginalName("attachment")] Attachment = 14,
    [pbr::OriginalName("label")] Label = 15,
    [pbr::OriginalName("parameter")] Parameter = 16,
  }

  #endregion

  #region Messages
  public sealed partial class Action : pb::IMessage<Action>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Action> _parser = new pb::MessageParser<Action>(() => new Action());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Action> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::gRPCService.ReportdataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Action() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Action(Action other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Action Clone() {
      return new Action(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Action);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Action other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Action other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class Response : pb::IMessage<Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::gRPCService.ReportdataReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response(Response other) : this() {
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response Clone() {
      return new Response(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private int status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Response other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Status = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Status = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TestDataList : pb::IMessage<TestDataList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TestDataList> _parser = new pb::MessageParser<TestDataList>(() => new TestDataList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TestDataList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::gRPCService.ReportdataReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestDataList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestDataList(TestDataList other) : this() {
      repeatedTestData_ = other.repeatedTestData_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestDataList Clone() {
      return new TestDataList(this);
    }

    /// <summary>Field number for the "repeatedTestData" field.</summary>
    public const int RepeatedTestDataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::gRPCService.TestData> _repeated_repeatedTestData_codec
        = pb::FieldCodec.ForMessage(10, global::gRPCService.TestData.Parser);
    private readonly pbc::RepeatedField<global::gRPCService.TestData> repeatedTestData_ = new pbc::RepeatedField<global::gRPCService.TestData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::gRPCService.TestData> RepeatedTestData {
      get { return repeatedTestData_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TestDataList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TestDataList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!repeatedTestData_.Equals(other.repeatedTestData_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= repeatedTestData_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      repeatedTestData_.WriteTo(output, _repeated_repeatedTestData_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      repeatedTestData_.WriteTo(ref output, _repeated_repeatedTestData_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += repeatedTestData_.CalculateSize(_repeated_repeatedTestData_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TestDataList other) {
      if (other == null) {
        return;
      }
      repeatedTestData_.Add(other.repeatedTestData_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            repeatedTestData_.AddEntriesFrom(input, _repeated_repeatedTestData_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            repeatedTestData_.AddEntriesFrom(ref input, _repeated_repeatedTestData_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TestData : pb::IMessage<TestData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TestData> _parser = new pb::MessageParser<TestData>(() => new TestData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TestData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::gRPCService.ReportdataReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestData(TestData other) : this() {
      _hasBits0 = other._hasBits0;
      measurement_ = other.measurement_;
      status_ = other.status_;
      stage_ = other.stage_;
      parentID_ = other.parentID_;
      itemType_ = other.itemType_;
      stepID_ = other.stepID_;
      start_ = other.start_;
      stop_ = other.stop_;
      fieldName_ = other.fieldName_;
      fieldValue_ = other.fieldValue_;
      timestamp_ = other.timestamp_;
      description_ = other.description_;
      historyID_ = other.historyID_;
      itemID_ = other.itemID_;
      tag_ = other.tag_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestData Clone() {
      return new TestData(this);
    }

    /// <summary>Field number for the "measurement" field.</summary>
    public const int MeasurementFieldNumber = 1;
    private string measurement_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Measurement {
      get { return measurement_; }
      set {
        measurement_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::gRPCService.TestData.Types.Status status_ = global::gRPCService.TestData.Types.Status.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::gRPCService.TestData.Types.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "stage" field.</summary>
    public const int StageFieldNumber = 3;
    private global::gRPCService.TestData.Types.Stage stage_ = global::gRPCService.TestData.Types.Stage.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::gRPCService.TestData.Types.Stage Stage {
      get { return stage_; }
      set {
        stage_ = value;
      }
    }

    /// <summary>Field number for the "parentID" field.</summary>
    public const int ParentIDFieldNumber = 4;
    private string parentID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParentID {
      get { return parentID_ ?? ""; }
      set {
        parentID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "parentID" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasParentID {
      get { return parentID_ != null; }
    }
    /// <summary>Clears the value of the "parentID" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearParentID() {
      parentID_ = null;
    }

    /// <summary>Field number for the "itemType" field.</summary>
    public const int ItemTypeFieldNumber = 5;
    private string itemType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ItemType {
      get { return itemType_; }
      set {
        itemType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "stepID" field.</summary>
    public const int StepIDFieldNumber = 6;
    private string stepID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StepID {
      get { return stepID_ ?? ""; }
      set {
        stepID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "stepID" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStepID {
      get { return stepID_ != null; }
    }
    /// <summary>Clears the value of the "stepID" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStepID() {
      stepID_ = null;
    }

    /// <summary>Field number for the "start" field.</summary>
    public const int StartFieldNumber = 7;
    private long start_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Start {
      get { if ((_hasBits0 & 1) != 0) { return start_; } else { return 0L; } }
      set {
        _hasBits0 |= 1;
        start_ = value;
      }
    }
    /// <summary>Gets whether the "start" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStart {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "start" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStart() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "stop" field.</summary>
    public const int StopFieldNumber = 8;
    private long stop_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Stop {
      get { if ((_hasBits0 & 2) != 0) { return stop_; } else { return 0L; } }
      set {
        _hasBits0 |= 2;
        stop_ = value;
      }
    }
    /// <summary>Gets whether the "stop" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStop {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "stop" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStop() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "fieldName" field.</summary>
    public const int FieldNameFieldNumber = 9;
    private string fieldName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FieldName {
      get { return fieldName_; }
      set {
        fieldName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fieldValue" field.</summary>
    public const int FieldValueFieldNumber = 10;
    private float fieldValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float FieldValue {
      get { return fieldValue_; }
      set {
        fieldValue_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 11;
    private long timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 12;
    private string description_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_ ?? ""; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "description" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDescription {
      get { return description_ != null; }
    }
    /// <summary>Clears the value of the "description" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDescription() {
      description_ = null;
    }

    /// <summary>Field number for the "historyID" field.</summary>
    public const int HistoryIDFieldNumber = 13;
    private string historyID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HistoryID {
      get { return historyID_ ?? ""; }
      set {
        historyID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "historyID" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasHistoryID {
      get { return historyID_ != null; }
    }
    /// <summary>Clears the value of the "historyID" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHistoryID() {
      historyID_ = null;
    }

    /// <summary>Field number for the "itemID" field.</summary>
    public const int ItemIDFieldNumber = 14;
    private string itemID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ItemID {
      get { return itemID_ ?? ""; }
      set {
        itemID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "itemID" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasItemID {
      get { return itemID_ != null; }
    }
    /// <summary>Clears the value of the "itemID" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearItemID() {
      itemID_ = null;
    }

    /// <summary>Field number for the "tag" field.</summary>
    public const int TagFieldNumber = 15;
    private static readonly pb::FieldCodec<global::gRPCService.Tags> _repeated_tag_codec
        = pb::FieldCodec.ForMessage(122, global::gRPCService.Tags.Parser);
    private readonly pbc::RepeatedField<global::gRPCService.Tags> tag_ = new pbc::RepeatedField<global::gRPCService.Tags>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::gRPCService.Tags> Tag {
      get { return tag_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TestData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TestData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Measurement != other.Measurement) return false;
      if (Status != other.Status) return false;
      if (Stage != other.Stage) return false;
      if (ParentID != other.ParentID) return false;
      if (ItemType != other.ItemType) return false;
      if (StepID != other.StepID) return false;
      if (Start != other.Start) return false;
      if (Stop != other.Stop) return false;
      if (FieldName != other.FieldName) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(FieldValue, other.FieldValue)) return false;
      if (Timestamp != other.Timestamp) return false;
      if (Description != other.Description) return false;
      if (HistoryID != other.HistoryID) return false;
      if (ItemID != other.ItemID) return false;
      if(!tag_.Equals(other.tag_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Measurement.Length != 0) hash ^= Measurement.GetHashCode();
      if (Status != global::gRPCService.TestData.Types.Status.None) hash ^= Status.GetHashCode();
      if (Stage != global::gRPCService.TestData.Types.Stage.None) hash ^= Stage.GetHashCode();
      if (HasParentID) hash ^= ParentID.GetHashCode();
      if (ItemType.Length != 0) hash ^= ItemType.GetHashCode();
      if (HasStepID) hash ^= StepID.GetHashCode();
      if (HasStart) hash ^= Start.GetHashCode();
      if (HasStop) hash ^= Stop.GetHashCode();
      if (FieldName.Length != 0) hash ^= FieldName.GetHashCode();
      if (FieldValue != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(FieldValue);
      if (Timestamp != 0L) hash ^= Timestamp.GetHashCode();
      if (HasDescription) hash ^= Description.GetHashCode();
      if (HasHistoryID) hash ^= HistoryID.GetHashCode();
      if (HasItemID) hash ^= ItemID.GetHashCode();
      hash ^= tag_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Measurement.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Measurement);
      }
      if (Status != global::gRPCService.TestData.Types.Status.None) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Status);
      }
      if (Stage != global::gRPCService.TestData.Types.Stage.None) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Stage);
      }
      if (HasParentID) {
        output.WriteRawTag(34);
        output.WriteString(ParentID);
      }
      if (ItemType.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ItemType);
      }
      if (HasStepID) {
        output.WriteRawTag(50);
        output.WriteString(StepID);
      }
      if (HasStart) {
        output.WriteRawTag(56);
        output.WriteInt64(Start);
      }
      if (HasStop) {
        output.WriteRawTag(64);
        output.WriteInt64(Stop);
      }
      if (FieldName.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(FieldName);
      }
      if (FieldValue != 0F) {
        output.WriteRawTag(85);
        output.WriteFloat(FieldValue);
      }
      if (Timestamp != 0L) {
        output.WriteRawTag(88);
        output.WriteInt64(Timestamp);
      }
      if (HasDescription) {
        output.WriteRawTag(98);
        output.WriteString(Description);
      }
      if (HasHistoryID) {
        output.WriteRawTag(106);
        output.WriteString(HistoryID);
      }
      if (HasItemID) {
        output.WriteRawTag(114);
        output.WriteString(ItemID);
      }
      tag_.WriteTo(output, _repeated_tag_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Measurement.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Measurement);
      }
      if (Status != global::gRPCService.TestData.Types.Status.None) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Status);
      }
      if (Stage != global::gRPCService.TestData.Types.Stage.None) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Stage);
      }
      if (HasParentID) {
        output.WriteRawTag(34);
        output.WriteString(ParentID);
      }
      if (ItemType.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ItemType);
      }
      if (HasStepID) {
        output.WriteRawTag(50);
        output.WriteString(StepID);
      }
      if (HasStart) {
        output.WriteRawTag(56);
        output.WriteInt64(Start);
      }
      if (HasStop) {
        output.WriteRawTag(64);
        output.WriteInt64(Stop);
      }
      if (FieldName.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(FieldName);
      }
      if (FieldValue != 0F) {
        output.WriteRawTag(85);
        output.WriteFloat(FieldValue);
      }
      if (Timestamp != 0L) {
        output.WriteRawTag(88);
        output.WriteInt64(Timestamp);
      }
      if (HasDescription) {
        output.WriteRawTag(98);
        output.WriteString(Description);
      }
      if (HasHistoryID) {
        output.WriteRawTag(106);
        output.WriteString(HistoryID);
      }
      if (HasItemID) {
        output.WriteRawTag(114);
        output.WriteString(ItemID);
      }
      tag_.WriteTo(ref output, _repeated_tag_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Measurement.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Measurement);
      }
      if (Status != global::gRPCService.TestData.Types.Status.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (Stage != global::gRPCService.TestData.Types.Stage.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Stage);
      }
      if (HasParentID) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParentID);
      }
      if (ItemType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ItemType);
      }
      if (HasStepID) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StepID);
      }
      if (HasStart) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Start);
      }
      if (HasStop) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Stop);
      }
      if (FieldName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FieldName);
      }
      if (FieldValue != 0F) {
        size += 1 + 4;
      }
      if (Timestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
      }
      if (HasDescription) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (HasHistoryID) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HistoryID);
      }
      if (HasItemID) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ItemID);
      }
      size += tag_.CalculateSize(_repeated_tag_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TestData other) {
      if (other == null) {
        return;
      }
      if (other.Measurement.Length != 0) {
        Measurement = other.Measurement;
      }
      if (other.Status != global::gRPCService.TestData.Types.Status.None) {
        Status = other.Status;
      }
      if (other.Stage != global::gRPCService.TestData.Types.Stage.None) {
        Stage = other.Stage;
      }
      if (other.HasParentID) {
        ParentID = other.ParentID;
      }
      if (other.ItemType.Length != 0) {
        ItemType = other.ItemType;
      }
      if (other.HasStepID) {
        StepID = other.StepID;
      }
      if (other.HasStart) {
        Start = other.Start;
      }
      if (other.HasStop) {
        Stop = other.Stop;
      }
      if (other.FieldName.Length != 0) {
        FieldName = other.FieldName;
      }
      if (other.FieldValue != 0F) {
        FieldValue = other.FieldValue;
      }
      if (other.Timestamp != 0L) {
        Timestamp = other.Timestamp;
      }
      if (other.HasDescription) {
        Description = other.Description;
      }
      if (other.HasHistoryID) {
        HistoryID = other.HistoryID;
      }
      if (other.HasItemID) {
        ItemID = other.ItemID;
      }
      tag_.Add(other.tag_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Measurement = input.ReadString();
            break;
          }
          case 16: {
            Status = (global::gRPCService.TestData.Types.Status) input.ReadEnum();
            break;
          }
          case 24: {
            Stage = (global::gRPCService.TestData.Types.Stage) input.ReadEnum();
            break;
          }
          case 34: {
            ParentID = input.ReadString();
            break;
          }
          case 42: {
            ItemType = input.ReadString();
            break;
          }
          case 50: {
            StepID = input.ReadString();
            break;
          }
          case 56: {
            Start = input.ReadInt64();
            break;
          }
          case 64: {
            Stop = input.ReadInt64();
            break;
          }
          case 74: {
            FieldName = input.ReadString();
            break;
          }
          case 85: {
            FieldValue = input.ReadFloat();
            break;
          }
          case 88: {
            Timestamp = input.ReadInt64();
            break;
          }
          case 98: {
            Description = input.ReadString();
            break;
          }
          case 106: {
            HistoryID = input.ReadString();
            break;
          }
          case 114: {
            ItemID = input.ReadString();
            break;
          }
          case 122: {
            tag_.AddEntriesFrom(input, _repeated_tag_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Measurement = input.ReadString();
            break;
          }
          case 16: {
            Status = (global::gRPCService.TestData.Types.Status) input.ReadEnum();
            break;
          }
          case 24: {
            Stage = (global::gRPCService.TestData.Types.Stage) input.ReadEnum();
            break;
          }
          case 34: {
            ParentID = input.ReadString();
            break;
          }
          case 42: {
            ItemType = input.ReadString();
            break;
          }
          case 50: {
            StepID = input.ReadString();
            break;
          }
          case 56: {
            Start = input.ReadInt64();
            break;
          }
          case 64: {
            Stop = input.ReadInt64();
            break;
          }
          case 74: {
            FieldName = input.ReadString();
            break;
          }
          case 85: {
            FieldValue = input.ReadFloat();
            break;
          }
          case 88: {
            Timestamp = input.ReadInt64();
            break;
          }
          case 98: {
            Description = input.ReadString();
            break;
          }
          case 106: {
            HistoryID = input.ReadString();
            break;
          }
          case 114: {
            ItemID = input.ReadString();
            break;
          }
          case 122: {
            tag_.AddEntriesFrom(ref input, _repeated_tag_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the TestData message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Status {
        [pbr::OriginalName("none")] None = 0,
        [pbr::OriginalName("fail")] Fail = 1,
        [pbr::OriginalName("pass")] Pass = 2,
        [pbr::OriginalName("skip")] Skip = 3,
        [pbr::OriginalName("error")] Error = 4,
      }

      public enum Stage {
        [pbr::OriginalName("none_")] None = 0,
        [pbr::OriginalName("scheduled")] Scheduled = 1,
        [pbr::OriginalName("running")] Running = 2,
        [pbr::OriginalName("finished")] Finished = 3,
        [pbr::OriginalName("pending")] Pending = 4,
        [pbr::OriginalName("interrupted")] Interrupted = 5,
      }

    }
    #endregion

  }

  public sealed partial class Tags : pb::IMessage<Tags>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Tags> _parser = new pb::MessageParser<Tags>(() => new Tags());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Tags> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::gRPCService.ReportdataReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Tags() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Tags(Tags other) : this() {
      _hasBits0 = other._hasBits0;
      tag_ = other.tag_;
      valueInt_ = other.valueInt_;
      valueStr_ = other.valueStr_;
      valueBool_ = other.valueBool_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Tags Clone() {
      return new Tags(this);
    }

    /// <summary>Field number for the "tag" field.</summary>
    public const int TagFieldNumber = 1;
    private global::gRPCService.Tag tag_ = global::gRPCService.Tag.ParentId;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::gRPCService.Tag Tag {
      get { return tag_; }
      set {
        tag_ = value;
      }
    }

    /// <summary>Field number for the "valueInt" field.</summary>
    public const int ValueIntFieldNumber = 2;
    private int valueInt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ValueInt {
      get { if ((_hasBits0 & 1) != 0) { return valueInt_; } else { return 0; } }
      set {
        _hasBits0 |= 1;
        valueInt_ = value;
      }
    }
    /// <summary>Gets whether the "valueInt" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasValueInt {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "valueInt" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearValueInt() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "valueStr" field.</summary>
    public const int ValueStrFieldNumber = 3;
    private string valueStr_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ValueStr {
      get { return valueStr_ ?? ""; }
      set {
        valueStr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "valueStr" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasValueStr {
      get { return valueStr_ != null; }
    }
    /// <summary>Clears the value of the "valueStr" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearValueStr() {
      valueStr_ = null;
    }

    /// <summary>Field number for the "valueBool" field.</summary>
    public const int ValueBoolFieldNumber = 4;
    private bool valueBool_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ValueBool {
      get { if ((_hasBits0 & 2) != 0) { return valueBool_; } else { return false; } }
      set {
        _hasBits0 |= 2;
        valueBool_ = value;
      }
    }
    /// <summary>Gets whether the "valueBool" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasValueBool {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "valueBool" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearValueBool() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Tags);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Tags other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Tag != other.Tag) return false;
      if (ValueInt != other.ValueInt) return false;
      if (ValueStr != other.ValueStr) return false;
      if (ValueBool != other.ValueBool) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Tag != global::gRPCService.Tag.ParentId) hash ^= Tag.GetHashCode();
      if (HasValueInt) hash ^= ValueInt.GetHashCode();
      if (HasValueStr) hash ^= ValueStr.GetHashCode();
      if (HasValueBool) hash ^= ValueBool.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Tag != global::gRPCService.Tag.ParentId) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Tag);
      }
      if (HasValueInt) {
        output.WriteRawTag(16);
        output.WriteInt32(ValueInt);
      }
      if (HasValueStr) {
        output.WriteRawTag(26);
        output.WriteString(ValueStr);
      }
      if (HasValueBool) {
        output.WriteRawTag(32);
        output.WriteBool(ValueBool);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Tag != global::gRPCService.Tag.ParentId) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Tag);
      }
      if (HasValueInt) {
        output.WriteRawTag(16);
        output.WriteInt32(ValueInt);
      }
      if (HasValueStr) {
        output.WriteRawTag(26);
        output.WriteString(ValueStr);
      }
      if (HasValueBool) {
        output.WriteRawTag(32);
        output.WriteBool(ValueBool);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Tag != global::gRPCService.Tag.ParentId) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Tag);
      }
      if (HasValueInt) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ValueInt);
      }
      if (HasValueStr) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ValueStr);
      }
      if (HasValueBool) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Tags other) {
      if (other == null) {
        return;
      }
      if (other.Tag != global::gRPCService.Tag.ParentId) {
        Tag = other.Tag;
      }
      if (other.HasValueInt) {
        ValueInt = other.ValueInt;
      }
      if (other.HasValueStr) {
        ValueStr = other.ValueStr;
      }
      if (other.HasValueBool) {
        ValueBool = other.ValueBool;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Tag = (global::gRPCService.Tag) input.ReadEnum();
            break;
          }
          case 16: {
            ValueInt = input.ReadInt32();
            break;
          }
          case 26: {
            ValueStr = input.ReadString();
            break;
          }
          case 32: {
            ValueBool = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Tag = (global::gRPCService.Tag) input.ReadEnum();
            break;
          }
          case 16: {
            ValueInt = input.ReadInt32();
            break;
          }
          case 26: {
            ValueStr = input.ReadString();
            break;
          }
          case 32: {
            ValueBool = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Log : pb::IMessage<Log>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Log> _parser = new pb::MessageParser<Log>(() => new Log());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Log> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::gRPCService.ReportdataReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Log() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Log(Log other) : this() {
      logData_ = other.logData_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Log Clone() {
      return new Log(this);
    }

    /// <summary>Field number for the "logData" field.</summary>
    public const int LogDataFieldNumber = 1;
    private string logData_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LogData {
      get { return logData_; }
      set {
        logData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Log);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Log other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LogData != other.LogData) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LogData.Length != 0) hash ^= LogData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (LogData.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LogData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (LogData.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LogData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LogData.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LogData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Log other) {
      if (other == null) {
        return;
      }
      if (other.LogData.Length != 0) {
        LogData = other.LogData;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LogData = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            LogData = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
